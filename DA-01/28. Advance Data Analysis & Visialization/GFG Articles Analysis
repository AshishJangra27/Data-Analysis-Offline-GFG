{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "Bj45Wf1hhfw9",
        "outputId": "82bec41d-5239-4d9d-ca37-dd6782d803e1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'GeeksforGeeks-Articles-Data-Analysis'...\n",
            "remote: Enumerating objects: 23, done.\u001b[K\n",
            "remote: Counting objects: 100% (23/23), done.\u001b[K\n",
            "remote: Compressing objects: 100% (23/23), done.\u001b[K\n",
            "remote: Total 23 (delta 11), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (23/23), 2.15 MiB | 5.85 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          title         author_id  \\\n",
              "0        5 Best Practices For Writing SQL Joins       priyankab14   \n",
              "1                  Foundation CSS Dropdown Menu  ishankhandelwals   \n",
              "2  Top 20 Excel Shortcuts That You Need To Know       priyankab14   \n",
              "3                     Servlet – Fetching Result   nishatiwari1719   \n",
              "4                              Suffix Sum Array          rohit768   \n",
              "\n",
              "   last_updated                                               link category  \n",
              "0  21 Feb, 2022  https://www.geeksforgeeks.org/5-best-practices...     easy  \n",
              "1  20 Feb, 2022  https://www.geeksforgeeks.org/foundation-css-d...     easy  \n",
              "2  17 Feb, 2022  https://www.geeksforgeeks.org/top-20-excel-sho...     easy  \n",
              "3  17 Feb, 2022  https://www.geeksforgeeks.org/servlet-fetching...     easy  \n",
              "4  21 Feb, 2022    https://www.geeksforgeeks.org/suffix-sum-array/     easy  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f5a4808-938a-4995-97d1-a2047606bde1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>author_id</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>link</th>\n",
              "      <th>category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5 Best Practices For Writing SQL Joins</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/5-best-practices...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Foundation CSS Dropdown Menu</td>\n",
              "      <td>ishankhandelwals</td>\n",
              "      <td>20 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/foundation-css-d...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Top 20 Excel Shortcuts That You Need To Know</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/top-20-excel-sho...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Servlet – Fetching Result</td>\n",
              "      <td>nishatiwari1719</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/servlet-fetching...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Suffix Sum Array</td>\n",
              "      <td>rohit768</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/suffix-sum-array/</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f5a4808-938a-4995-97d1-a2047606bde1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2f5a4808-938a-4995-97d1-a2047606bde1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2f5a4808-938a-4995-97d1-a2047606bde1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ee2f6cc8-0cac-42d3-b8e0-12fe2f3a86c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee2f6cc8-0cac-42d3-b8e0-12fe2f3a86c9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ee2f6cc8-0cac-42d3-b8e0-12fe2f3a86c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "!git clone https://github.com/AshishJangra27/GeeksforGeeks-Articles-Data-Analysis\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "df = pd.read_csv('/content/GeeksforGeeks-Articles-Data-Analysis/articles.csv')\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1. Exploratory Data Analysis\n",
        "##### 1.1) Checking null values"
      ],
      "metadata": {
        "id": "JcYkAzO4jFyI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kwhne_UGimVB",
        "outputId": "45c1d8f0-84de-43b7-e14b-d3df6a4ad8c5"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "title            0\n",
              "author_id       19\n",
              "last_updated    18\n",
              "link             0\n",
              "category         0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1.2) Dealing with null values if there is any"
      ],
      "metadata": {
        "id": "_14iC2jXjNGU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.dropna(inplace=True)\n",
        "\n",
        "df.drop_duplicates(inplace = True)\n",
        "\n",
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m5eRqHgSjMwu",
        "outputId": "2288dfba-3356-4613-9a8f-6a745dc84d50"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "title           0\n",
              "author_id       0\n",
              "last_updated    0\n",
              "link            0\n",
              "category        0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1.3) Exploring 'category' column"
      ],
      "metadata": {
        "id": "OvU-SMeIjWmr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['category'].value_counts().loc[['easy', 'basic', 'medium','hard','expert']].plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491
        },
        "id": "tOyQrvKwjghs",
        "outputId": "e02c2ea7-7f71-4d5a-9e2a-9f4075fc9691"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 5
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1.4) Exploring 'link' column"
      ],
      "metadata": {
        "id": "6yrVV87Jjg3b"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['link'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t0VeBe8Ujjlv",
        "outputId": "c96774df-6e5b-4f7b-8236-18e230269877"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "34533"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1.5) Exploring 'last_updated' column"
      ],
      "metadata": {
        "id": "ffnQVXAljkNv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['last_updated'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3pmT2yI1jmwC",
        "outputId": "be0d6b9e-5cb9-4f65-d75b-eba288cf00e3"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "28 Jun, 2021    1283\n",
              "24 Nov, 2021     155\n",
              "30 Jun, 2021     151\n",
              "21 May, 2021     151\n",
              "11 Aug, 2021     140\n",
              "                ... \n",
              "07 Jun, 2016       1\n",
              "10 Jul, 2016       1\n",
              "04 May, 2017       1\n",
              "01 Sep, 2016       1\n",
              "12 May, 2015       1\n",
              "Name: last_updated, Length: 1962, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1.6) Exploring 'author_id' column"
      ],
      "metadata": {
        "id": "tfBFSSeLjnM5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['author_id'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I0P5QgR5jrc0",
        "outputId": "4ceca254-85aa-41ec-ce3e-2a612f0cbae4"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GeeksforGeeks        11949\n",
              "ManasChhabra2          316\n",
              "Striver                265\n",
              "manjeet_04             246\n",
              "Chinmoy Lenka          192\n",
              "                     ...  \n",
              "Alok_Kumar_Singh         1\n",
              "aaaanchakure             1\n",
              "bohramayank4u            1\n",
              "swapnilbutia05           1\n",
              "sandeep tadepalli        1\n",
              "Name: author_id, Length: 5589, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2. Data Cleaning\n",
        "##### 2.1) Dates | East, Medium"
      ],
      "metadata": {
        "id": "89l2AoPYjuPZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[df['last_updated'] != 'Easy']\n",
        "df = df[df['last_updated'] != 'Medium']\n",
        "df = df[df['last_updated'] != 'Basic']\n",
        "df = df[df['last_updated'] != 'Hard']\n",
        "\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "E470OnlyjwOu",
        "outputId": "d757b2a5-7853-4c1b-a0e0-d771d8edfcde"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          title         author_id  \\\n",
              "0        5 Best Practices For Writing SQL Joins       priyankab14   \n",
              "1                  Foundation CSS Dropdown Menu  ishankhandelwals   \n",
              "2  Top 20 Excel Shortcuts That You Need To Know       priyankab14   \n",
              "3                     Servlet – Fetching Result   nishatiwari1719   \n",
              "4                              Suffix Sum Array          rohit768   \n",
              "\n",
              "   last_updated                                               link category  \n",
              "0  21 Feb, 2022  https://www.geeksforgeeks.org/5-best-practices...     easy  \n",
              "1  20 Feb, 2022  https://www.geeksforgeeks.org/foundation-css-d...     easy  \n",
              "2  17 Feb, 2022  https://www.geeksforgeeks.org/top-20-excel-sho...     easy  \n",
              "3  17 Feb, 2022  https://www.geeksforgeeks.org/servlet-fetching...     easy  \n",
              "4  21 Feb, 2022    https://www.geeksforgeeks.org/suffix-sum-array/     easy  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c87fe428-8384-4f34-8550-b54e1bb90eab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>author_id</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>link</th>\n",
              "      <th>category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5 Best Practices For Writing SQL Joins</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/5-best-practices...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Foundation CSS Dropdown Menu</td>\n",
              "      <td>ishankhandelwals</td>\n",
              "      <td>20 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/foundation-css-d...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Top 20 Excel Shortcuts That You Need To Know</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/top-20-excel-sho...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Servlet – Fetching Result</td>\n",
              "      <td>nishatiwari1719</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/servlet-fetching...</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Suffix Sum Array</td>\n",
              "      <td>rohit768</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/suffix-sum-array/</td>\n",
              "      <td>easy</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c87fe428-8384-4f34-8550-b54e1bb90eab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c87fe428-8384-4f34-8550-b54e1bb90eab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c87fe428-8384-4f34-8550-b54e1bb90eab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d422b2ed-084b-490b-9a14-9c15bc7942fa\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d422b2ed-084b-490b-9a14-9c15bc7942fa')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d422b2ed-084b-490b-9a14-9c15bc7942fa button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2.2) Split dates based on day, month and year"
      ],
      "metadata": {
        "id": "zG7J5x6hHz9Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "date   = []\n",
        "month = []\n",
        "year  = []\n",
        "\n",
        "for i in df['last_updated']:\n",
        "  i = i.replace(',','')\n",
        "  date.append(int(i.split(' ')[0]))\n",
        "  month.append(i.split(' ')[1])\n",
        "  year.append(int(i.split(' ')[2]))\n",
        "\n",
        "df['date']   = date\n",
        "df['month'] = month\n",
        "df['year']  = year\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "6AgRuDywH3Xt",
        "outputId": "deb58ee1-c137-4c17-a0ba-2e124257dd08"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          title         author_id  \\\n",
              "0        5 Best Practices For Writing SQL Joins       priyankab14   \n",
              "1                  Foundation CSS Dropdown Menu  ishankhandelwals   \n",
              "2  Top 20 Excel Shortcuts That You Need To Know       priyankab14   \n",
              "3                     Servlet – Fetching Result   nishatiwari1719   \n",
              "4                              Suffix Sum Array          rohit768   \n",
              "\n",
              "   last_updated                                               link category  \\\n",
              "0  21 Feb, 2022  https://www.geeksforgeeks.org/5-best-practices...     easy   \n",
              "1  20 Feb, 2022  https://www.geeksforgeeks.org/foundation-css-d...     easy   \n",
              "2  17 Feb, 2022  https://www.geeksforgeeks.org/top-20-excel-sho...     easy   \n",
              "3  17 Feb, 2022  https://www.geeksforgeeks.org/servlet-fetching...     easy   \n",
              "4  21 Feb, 2022    https://www.geeksforgeeks.org/suffix-sum-array/     easy   \n",
              "\n",
              "   date month  year  \n",
              "0    21   Feb  2022  \n",
              "1    20   Feb  2022  \n",
              "2    17   Feb  2022  \n",
              "3    17   Feb  2022  \n",
              "4    21   Feb  2022  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-617cf973-bc8b-40a0-b3b6-ad49e54b06b3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>author_id</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>link</th>\n",
              "      <th>category</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5 Best Practices For Writing SQL Joins</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/5-best-practices...</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Foundation CSS Dropdown Menu</td>\n",
              "      <td>ishankhandelwals</td>\n",
              "      <td>20 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/foundation-css-d...</td>\n",
              "      <td>easy</td>\n",
              "      <td>20</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Top 20 Excel Shortcuts That You Need To Know</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/top-20-excel-sho...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Servlet – Fetching Result</td>\n",
              "      <td>nishatiwari1719</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/servlet-fetching...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Suffix Sum Array</td>\n",
              "      <td>rohit768</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/suffix-sum-array/</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-617cf973-bc8b-40a0-b3b6-ad49e54b06b3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-617cf973-bc8b-40a0-b3b6-ad49e54b06b3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-617cf973-bc8b-40a0-b3b6-ad49e54b06b3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bcfc5ccc-5dd4-4e59-910c-05638aa2692f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bcfc5ccc-5dd4-4e59-910c-05638aa2692f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bcfc5ccc-5dd4-4e59-910c-05638aa2692f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: code to find the day on a specific date\n",
        "\n",
        "import datetime\n",
        "\n",
        "def find_day(date):\n",
        "  date_obj = datetime.datetime.strptime(date, '%d %b %Y')\n",
        "  day = date_obj.strftime('%A')\n",
        "  return day\n",
        "\n",
        "df['day'] = [find_day(date.replace(',','')) for date in df['last_updated']]\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "napEv9PcNMtY",
        "outputId": "cd07ed6d-245b-489f-e14a-c3b3b0498805"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          title         author_id  \\\n",
              "0        5 Best Practices For Writing SQL Joins       priyankab14   \n",
              "1                  Foundation CSS Dropdown Menu  ishankhandelwals   \n",
              "2  Top 20 Excel Shortcuts That You Need To Know       priyankab14   \n",
              "3                     Servlet – Fetching Result   nishatiwari1719   \n",
              "4                              Suffix Sum Array          rohit768   \n",
              "\n",
              "   last_updated                                               link category  \\\n",
              "0  21 Feb, 2022  https://www.geeksforgeeks.org/5-best-practices...     easy   \n",
              "1  20 Feb, 2022  https://www.geeksforgeeks.org/foundation-css-d...     easy   \n",
              "2  17 Feb, 2022  https://www.geeksforgeeks.org/top-20-excel-sho...     easy   \n",
              "3  17 Feb, 2022  https://www.geeksforgeeks.org/servlet-fetching...     easy   \n",
              "4  21 Feb, 2022    https://www.geeksforgeeks.org/suffix-sum-array/     easy   \n",
              "\n",
              "   date month  year       day  \n",
              "0    21   Feb  2022    Monday  \n",
              "1    20   Feb  2022    Sunday  \n",
              "2    17   Feb  2022  Thursday  \n",
              "3    17   Feb  2022  Thursday  \n",
              "4    21   Feb  2022    Monday  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-57d904bc-3669-4312-ab5d-803dc9539735\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>author_id</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>link</th>\n",
              "      <th>category</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>day</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5 Best Practices For Writing SQL Joins</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/5-best-practices...</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Foundation CSS Dropdown Menu</td>\n",
              "      <td>ishankhandelwals</td>\n",
              "      <td>20 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/foundation-css-d...</td>\n",
              "      <td>easy</td>\n",
              "      <td>20</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Sunday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Top 20 Excel Shortcuts That You Need To Know</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/top-20-excel-sho...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Servlet – Fetching Result</td>\n",
              "      <td>nishatiwari1719</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/servlet-fetching...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Suffix Sum Array</td>\n",
              "      <td>rohit768</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/suffix-sum-array/</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57d904bc-3669-4312-ab5d-803dc9539735')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-57d904bc-3669-4312-ab5d-803dc9539735 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-57d904bc-3669-4312-ab5d-803dc9539735');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-37dd9760-2d5d-440b-8176-eb6a192e61e7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37dd9760-2d5d-440b-8176-eb6a192e61e7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-37dd9760-2d5d-440b-8176-eb6a192e61e7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3. Data Analysis\n",
        "##### 3.1) Article distribution in each category"
      ],
      "metadata": {
        "id": "Ge_DrJiij_4U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'category')['title'].count().plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 510
        },
        "id": "MVBnV_vgj6AI",
        "outputId": "077d9248-832f-4572-b328-e18598ba1a10"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='category'>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.2) If there is any relation between number of article published and date?"
      ],
      "metadata": {
        "id": "jcfAscpukKMw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'date')['title'].count().plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "qE5qVGN8kSDD",
        "outputId": "3eb868bc-5750-4e20-a43e-5a39fa4763c2"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='date'>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.3) If there is any relation between number of article published and month?"
      ],
      "metadata": {
        "id": "DlKgua9LkSvG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'month')['title'].count().loc[['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']].plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "1h-Ew2eBkUew",
        "outputId": "5ab19987-cef5-4916-cf69-a904cdf874ce"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='month'>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.4) If there is any relation between number of article published and year?"
      ],
      "metadata": {
        "id": "_DrfBA-VkU0J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'year')['title'].count().plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "qmp112EAkWGS",
        "outputId": "bb05af74-b2a7-4e37-f42a-d702fa1d1ee6"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='year'>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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W6ebbrpJsbGx8ng8WrJkic/43XffLY/H47P069fPZ84333yjO+64QxEREWrUqJHS09N16NAhnzlbtmzRtddeq7CwMMXFxWn69OmnZXnrrbfUtm1bhYWFKTExUStWrKju7gAAAEtVu+QcPnxYHTt21Ny5c886p1+/ftq3b5+z/O1vf/MZv+OOO1RQUKDs7GwtW7ZM69at0/Dhw51xr9ervn37qmXLlsrLy9OMGTOUmZmpF154wZmzfv16DRw4UOnp6dq0aZPS0tKUlpamrVu3VneXAACAhTzGGHPed/Z49PbbbystLc1Zd/fdd+vgwYOnneE55YsvvlBCQoI+++wzXXHFFZKklStX6sYbb9RXX32l2NhYPf/88/rjH/+o0tJShYSESJImTJigJUuWqLCwUJJ022236fDhw1q2bJmz7e7du6tTp06aN2/eT8rv9XoVGRmp8vJyRUREnMcRAADAf1pNWF5j2yqellpj2/K3n/r3u1auyVm7dq2ioqLUpk0b3Xffffr666+dsdzcXDVq1MgpOJKUnJysoKAgffLJJ86cnj17OgVHklJSUlRUVKQDBw44c5KTk30eNyUlRbm5ubWxSwAAoI6pV9Mb7Nevn2655RbFx8dr586devTRR9W/f3/l5uYqODhYpaWlioqK8g1Rr56aNGmi0tJSSVJpaani4+N95kRHRztjjRs3VmlpqbPu+3NObeNMKioqVFFR4dz2er0/a18BAIB71XjJuf32251/JyYmqkOHDrr00ku1du1a9enTp6YfrlqmTp2qyZMnBzQDAADwj1p/C/kll1yiZs2aaceOHZKkmJgY7d+/32dOZWWlvvnmG8XExDhzysrKfOacuv1jc06Nn0lGRobKy8udZc+ePT9v5wAAgGvVesn56quv9PXXX6t58+aSpKSkJB08eFB5eXnOnDVr1qiqqkrdunVz5qxbt04nTpxw5mRnZ6tNmzZq3LixMycnJ8fnsbKzs5WUlHTWLKGhoYqIiPBZAACAnapdcg4dOqT8/Hzl5+dLknbv3q38/HyVlJTo0KFDGjt2rD7++GMVFxcrJydHv/nNb9S6dWulpKRIktq1a6d+/fpp2LBh+vTTT/XRRx9p1KhRuv322xUbGytJGjRokEJCQpSenq6CggItWrRIc+bM0ZgxY5wcDz74oFauXKmZM2eqsLBQmZmZ2rBhg0aNGlUDhwUAANR11S45GzZsUOfOndW5c2dJ0pgxY9S5c2dNmjRJwcHB2rJli37961/rl7/8pdLT09W1a1d98MEHCg0NdbaxYMECtW3bVn369NGNN96oHj16+HwGTmRkpN59913t3r1bXbt21cMPP6xJkyb5fJbO1VdfrYULF+qFF15Qx44d9fe//11LlixR+/btf87xAAAAlvhZn5NT1/E5OQCAuoTPyflOQD8nBwAAINAoOQAAwEqUHAAAYCVKDgAAsBIlBwAAWImSAwAArETJAQAAVqLkAAAAK1FyAACAlSg5AADASpQcAABgJUoOAACwEiUHAABYiZIDAACsRMkBAABWouQAAAArUXIAAICVKDkAAMBKlBwAAGAlSg4AALASJQcAAFiJkgMAAKxEyQEAAFai5AAAACtRcgAAgJUoOQAAwEqUHAAAYCVKDgAAsBIlBwAAWImSAwAArETJAQAAVqLkAAAAK1FyAACAlSg5AADASpQcAABgJUoOAACwEiUHAABYqdolZ926dbrpppsUGxsrj8ejJUuWOGMnTpzQ+PHjlZiYqPr16ys2NlaDBw/W3r17fbbRqlUreTwen2XatGk+c7Zs2aJrr71WYWFhiouL0/Tp00/L8tZbb6lt27YKCwtTYmKiVqxYUd3dAQAAlqp2yTl8+LA6duyouXPnnjZ25MgRbdy4UX/605+0ceNGLV68WEVFRfr1r3992twpU6Zo3759zvKHP/zBGfN6verbt69atmypvLw8zZgxQ5mZmXrhhRecOevXr9fAgQOVnp6uTZs2KS0tTWlpadq6dWt1dwkAAFioXnXv0L9/f/Xv3/+MY5GRkcrOzvZZ9+yzz+qqq65SSUmJWrRo4axv2LChYmJizridBQsW6Pjx45o/f75CQkJ0+eWXKz8/X7NmzdLw4cMlSXPmzFG/fv00duxYSdLjjz+u7OxsPfvss5o3b151dwsAAFim1q/JKS8vl8fjUaNGjXzWT5s2TU2bNlXnzp01Y8YMVVZWOmO5ubnq2bOnQkJCnHUpKSkqKirSgQMHnDnJyck+20xJSVFubu5Zs1RUVMjr9fosAADATtU+k1Mdx44d0/jx4zVw4EBFREQ46x944AF16dJFTZo00fr165WRkaF9+/Zp1qxZkqTS0lLFx8f7bCs6OtoZa9y4sUpLS511359TWlp61jxTp07V5MmTa2r3AACAi9VayTlx4oR+97vfyRij559/3mdszJgxzr87dOigkJAQ/f73v9fUqVMVGhpaW5GUkZHh89her1dxcXG19ngAACBwaqXknCo4X375pdasWeNzFudMunXrpsrKShUXF6tNmzaKiYlRWVmZz5xTt09dx3O2OWe7zkeSQkNDa7VEAQAA96jxa3JOFZzt27dr9erVatq06Y/eJz8/X0FBQYqKipIkJSUlad26dTpx4oQzJzs7W23atFHjxo2dOTk5OT7byc7OVlJSUg3uDQAAqKuqfSbn0KFD2rFjh3N79+7dys/PV5MmTdS8eXPdeuut2rhxo5YtW6aTJ08618g0adJEISEhys3N1SeffKLevXurYcOGys3N1ejRo3XnnXc6BWbQoEGaPHmy0tPTNX78eG3dulVz5szR7Nmzncd98MEHdd1112nmzJlKTU3VG2+8oQ0bNvi8zRwAAPzv8hhjTHXusHbtWvXu3fu09UOGDFFmZuZpFwyf8t5776lXr17auHGj7r//fhUWFqqiokLx8fG66667NGbMGJ+XkrZs2aKRI0fqs88+U7NmzfSHP/xB48eP99nmW2+9pYkTJ6q4uFiXXXaZpk+frhtvvPEn74vX61VkZKTKy8t/9CU1AAACrdWE5TW2reJpqTW2LX/7qX+/q11ybELJAQDUJZSc7/zUv998dxUAALASJQcAAFiJkgMAAKxEyQEAAFai5AAAACtRcgAAgJUoOQAAwEqUHAAAYCVKDgAAsBIlBwAAWImSAwAArETJAQAAVqLkAAAAK1FyAACAlSg5AADASpQcAABgJUoOAACwEiUHAABYiZIDAACsRMkBAABWouQAAAArUXIAAICVKDkAAMBKlBwAAGAlSg4AALASJQcAAFiJkgMAAKxEyQEAAFai5AAAACtRcgAAgJUoOQAAwEqUHAAAYCVKDgAAsBIlBwAAWImSAwAArETJAQAAVqp2yVm3bp1uuukmxcbGyuPxaMmSJT7jxhhNmjRJzZs314UXXqjk5GRt377dZ84333yjO+64QxEREWrUqJHS09N16NAhnzlbtmzRtddeq7CwMMXFxWn69OmnZXnrrbfUtm1bhYWFKTExUStWrKju7gAAAEtVu+QcPnxYHTt21Ny5c884Pn36dD3zzDOaN2+ePvnkE9WvX18pKSk6duyYM+eOO+5QQUGBsrOz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tgX8r+JMDgAAsBIlBwAAWImSAwAArETJAQAAVqLkAAAAK1FyAACAlSg5AADASpQcAABgJUoOAACwEiUHAABYiZIDAACsRMkBAABWouQAAAArUXIAAICV6nzJmTt3rlq1aqWwsDB169ZNn376aaAjAQAAF6gX6AA/x6JFizRmzBjNmzdP3bp109NPP62UlBQVFRUpKioq0PGAOq/VhOU1tq3iaak1ti235gLgLnX6TM6sWbM0bNgw3XPPPUpISNC8efMUHh6u+fPnBzoaAAAIsDp7Juf48ePKy8tTRkaGsy4oKEjJycnKzc09430qKipUUVHh3C4vL5ckeb3e2g0L12j/2Koa29bWySk1ti235qqqOFJj26rJ/87IVT1uzSW5Nxu5qsffuU7NMcace6Kpo/79738bSWb9+vU+68eOHWuuuuqqM97nscceM5JYWFhYWFhYLFj27Nlzzq5QZ8/knI+MjAyNGTPGuV1VVaVvvvlGTZs2lcfj+Vnb9nq9iouL0549exQREfFzo9YYclUPuarHrbkk92YjV/WQq3rcmkuq2WzGGH377beKjY0957w6W3KaNWum4OBglZWV+awvKytTTEzMGe8TGhqq0NBQn3WNGjWq0VwRERGue2JJ5KouclWPW3NJ7s1GruohV/W4NZdUc9kiIyN/dE6dvfA4JCREXbt2VU5OjrOuqqpKOTk5SkpKCmAyAADgBnX2TI4kjRkzRkOGDNEVV1yhq666Sk8//bQOHz6se+65J9DRAABAgNXpknPbbbfpP//5jyZNmqTS0lJ16tRJK1euVHR0tN+zhIaG6rHHHjvt5bBAI1f1kKt63JpLcm82clUPuarHrbmkwGTzGPNj778CAACoe+rsNTkAAADnQskBAABWouQAAAArUXIAAICVKDkAAMBKlJyfqby8XEVFRSoqKnK+8BN1mzFGJ0+eDHSM02RlZfEcA1zgh1/2DPei5Jynl156SQkJCWrSpIkSEhJ8/v3yyy8HOp7rrFixQkOHDtW4ceNUWFjoM3bgwAFdf/31fs9UWVmpiRMn6rrrrtNjjz0mSZoxY4YaNGig8PBwDRkyRMePH/d7rrMZPny49u7dG7DH//TTT33K37Jly3TdddfpF7/4ha644gq99tprAct2Jtu3b1dOTo527NgRsAwNGzZUenq61q9fH7AM5/LDMv/pp5/q448/dsUf8JKSEn3yySf67LPP9PXXXwc6jrKzs3XjjTeqcePGCg8PV3h4uBo3bqwbb7xRq1evDnS8M/riiy90ySWXBOzxN2/erCeeeELPPfec/vvf//qMeb1e3XvvvbUfoka+Evx/zPTp0014eLiZMGGCee+998y2bdvMtm3bzHvvvWcyMjJM/fr1zYwZMwId8zT5+fkmKCjI74+7YMECExwcbFJTU02PHj1MWFiYef31153x0tLSgOSaOHGiiY6ONmPGjDEJCQlmxIgRJi4uzrz++uvm1VdfNb/4xS/MU0895fdcjRs3PuPi8XhMZGSkc9vfgoKCTFlZmTHGmHfeeccEBQWZwYMHm7lz55qhQ4eaevXqmcWLF/s9lzHG/PnPfzarV682xhjzzTffmD59+hiPx2M8Ho8JCgoy/fr1MwcOHPB7Lo/HYy6//HLj8XhM27Ztzf/93/+Z/fv3+z3HDxUXF5uuXbua4OBg069fP1NeXm6Sk5OdY3bJJZeYoqKigGSbO3euadGihQkKCvJZrrnmGrNhw4aAZMrKyjL16tUzt99+u3nllVfMihUrzIoVK8wrr7xiBg4caC644ALz2muvBSTbuQTqd74xxqxatcqEhISYyy+/3LRo0cI0bdrUrFmzxhn31+99Ss55aNGihVm0aNFZx9944w0TFxfnx0Q/TX5+vvF4PH5/3E6dOpk5c+Y4txctWmTq169vXnrpJWNM4ErOJZdcYpYuXWqMMWb79u0mKCjIvPHGGz4527dv7/dcDRo0MKmpqSYrK8tZXnnlFRMcHGyefPJJZ52/eTwep+T06NHDTJgwwWf8ySefNN27d/d7LmOMufjii83GjRuNMcYMHTrUdO7c2WzcuNEcPXrU5Ofnm+7du5v09HS/5zp1zPLz882oUaNMkyZNTEhIiLnlllvMihUrTFVVld8zGWPMgAEDzHXXXWeWLl1qfve735lrrrnG9OrVy3z11Vdm7969JiUlxaSlpfk914wZM0xsbKz5y1/+Yl588UXTrl07M2XKFPPPf/7T3HXXXSY8PNx89tlnfs912WWXmWefffas43PnzjWtW7f2Y6LvjB49+pzLnXfeGbCSk5SUZB599FFjjDFVVVXmqaeeMg0aNDD//Oc/jTGUHFcLCwsz27ZtO+t4QUGBufDCC/2Y6Ds333zzOZfrr78+IE/4+vXrm127dvmsW7NmjWnQoIF5/vnnA1ZywsLCTElJic/tL774wrm9a9cu07BhQ7/n2r59u7nyyivN4MGDzbfffuusr1evnikoKPB7nlO+X3KioqJO+7/qwsJC06hRo0BEM6Ghoaa4uNgYY0yrVq3M+++/7zO+YcMG07x5c7/n+v4xM8aYY8eOmYULF5o+ffqYoKAgc/HFF5s//elPfs910UUXmU2bNhljjDl48KDxeDzmgw8+cMbz8vJMdHS033O1atXKrFixwrldVFRkmjZtak6cOGGMMeaBBx4wN9xwg99zhYaGmsLCwrOOFxYWmrCwMD8m+k5QUJDp0qWL6dWr1xmXK664ImAlJyIiwuzYscNn3YIFC0z9+vXN0qVL/fZ7n2tyzsOVV16padOmqbKy8rSxkydP6qmnntKVV17p91xLly7VsWPHFBkZecalQYMGfs8kSRERESorK/NZ17t3by1btkxjx47VX/7yl4DkioyM1MGDB53bXbp0UcOGDZ3bFRUV8ng8fs/VunVrrV+/XjExMerUqZM++ugjv2c4m23btmnLli268MILVVVVddr4mf6b8IeWLVtq69atkiSPx6N69Xy/li84OFiHDx/2e64fPn9CQ0M1cOBArV69Wjt37tTdd9+trKwsv+c69XtC+u66oeDgYJ/nfkREhI4cOeL3XPv371e7du2c25dddpnKy8v1n//8R5J07733Kjc31++5Lr/88nNeazl//nwlJCT4MdF3WrdurdGjR+u999474/Liiy/6PdMpoaGhPr9fJWnQoEF66aWXdNttt+ntt9/2T5Bar1EW2rx5s4mJiTFNmzY1N998sxkxYoQZMWKEufnmm03Tpk1N8+bNzeeff+73XImJic5LQGeyadOmgLT63/zmN2bSpElnHHvvvfdM/fr1A5Krd+/e53zZ58033zRdu3b1Y6LT5eTkmBYtWpiMjAxzwQUXBPxMTlBQkHPdxuzZs33G//a3v5mEhISAZJsxY4Zp166d2b59u5k5c6ZJSkpy/i9y165dplevXubWW2/1e64fnsk5k0C8ZNW9e3czceJEY4wx8+fPN9HR0T4vP06ZMiUgz/1OnTqZF154wbmdk5NjwsPDnWNUWFgYkLOrp35PJSYmmtGjR5tp06aZadOmmdGjR5sOHTqYBg0anHb20B8GDRpkHnroobOOB+oSBWOMueGGG856berC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pXbt2qlnz55KTEzUdddd5/N19uXl5brnnnv8nsutx4tcduSSeO5Xl1uPl1tzufXn6NZcrspW6zXKQlFRUWbLli3O7aqqKjNixAjTokULs3PnzoC157S0NJOammr+85//mO3bt5vU1FQTHx9vvvzyS2NM4Fq9W48XuezIZQzP/epy6/Fyay63/hzdmstN2Sg556Fhw4Zm27Ztp60fOXKkufjii826det4wn+PW48XuezIZQzP/epy6/Fyay63/hzdmssY92Sj5JyHK6+80rz22mtnHBs5cqRp1KgRT/jvcevxIlf1uDWXMTz3q8utx8utudz6c3RrLmPck42Scx7+/Oc/m/79+591/L777jMej8ePib7jlifVD7n1eJGretyayxie+9Xl1uPl1lxu/Tm6NZcx7snG5+RYZOrUqfrggw+0YsWKM47ff//9mjdvnqqqqvycDKhdPPerx63Hy625UHdRcgAAgJV4CzkAALASJQcAAFiJkgMAAKxEyQEAAFai5AAAACtRcgDge06ePMlblAFLUHIAuNZrr72mpk2bqqKiwmd9Wlqa7rrrLknSP/7xD3Xp0kVhYWG65JJLNHnyZFVWVjpzZ82apcTERNWvX19xcXG6//77dejQIWc8KytLjRo10jvvvKOEhASFhoa64gsOAfx8lBwArvXb3/5WJ0+e1DvvvOOs279/v5YvX657771XH3zwgQYPHqwHH3xQ27Zt01//+ldlZWXpySefdOYHBQXpmWeeUUFBgV599VWtWbNG48aN83mcI0eO6KmnntJLL72kgoICRUVF+W0fAdQePgwQgKvdf//9Ki4udj4Fd9asWZo7d6527NihG264QX369FFGRoYz//XXX9e4ceO0d+/eM27v73//u0aMGKH//ve/kr47k3PPPfcoPz9fHTt2rP0dAuA3lBwArrZp0yZdeeWV+vLLL/WLX/xCHTp00G9/+1v96U9/0kUXXaRDhw4pODjYmX/y5EkdO3ZMhw8fVnh4uFavXq2pU6eqsLBQXq9XlZWVPuNZWVn6/e9/r2PHjsnj8QRwTwHUtHqBDgAA59K5c2d17NhRr732mvr27auCggItX75cknTo0CFNnjxZt9xyy2n3CwsLU3FxsX71q1/pvvvu05NPPqkmTZroww8/VHp6uo4fP67w8HBJ0oUXXkjBASxEyQHgekOHDtXTTz+tf//730pOTlZcXJwkqUuXLioqKlLr1q3PeL+8vDxVVVVp5syZCgr67hLEN99802+5AQQWJQeA6w0aNEiPPPKIXnzxRb322mvO+kmTJulXv/qVWrRooVtvvVVBQUHavHmztm7dqieeeEKtW7fWiRMn9Je//EU33XSTPvroI82bNy+AewLAn3h3FQDXi4yM1IABA9SgQQOlpaU561NSUrRs2TK9++67uvLKK9W9e3fNnj1bLVu2lCR17NhRs2bN0lNPPaX27dtrwYIFmjp1aoD2AoC/ceExgDqhT58+uvzyy/XMM88EOgqAOoKSA8DVDhw4oLVr1+rWW2/Vtm3b1KZNm0BHAlBHcE0OAFfr3LmzDhw4oKeeeoqCA6BaOJMDAACsxIXHAADASpQcAABgJUoOAACwEiUHAABYiZIDAACsRMkBAABWouQAAAArUXIAAICVKDkAAMBK/x+DWqUf01hYBQAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.5) In the history of GFG, which day has most number of articles published?"
      ],
      "metadata": {
        "id": "DJ8RNSp5kW8m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'last_updated')['title'].count().sort_values(ascending = False).head(20).plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "SRGkVPPekeCZ",
        "outputId": "5261b459-7cfb-4865-b1f2-deff2ea0fb15"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='last_updated'>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.6) Top 5 writers for award who has given maximum contribution to gfg"
      ],
      "metadata": {
        "id": "yayiZKFYkjaQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(by = 'author_id')['title'].count().sort_values(ascending = False)[1:11].plot(kind = 'bar')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 604
        },
        "id": "VpscVxoCkgQ-",
        "outputId": "2ac75880-8993-4516-9479-4a8b624d6b1e"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='author_id'>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 3.7) Which language has most number of articles published among C, C++, Java and Python?"
      ],
      "metadata": {
        "id": "Kqg-kVsxlA6I"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "V-he8I7OkgO3",
        "outputId": "3ff7d0b0-219f-40a4-93c8-fcf0fe02add5"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                title             author_id  \\\n",
              "0              5 Best Practices For Writing SQL Joins           priyankab14   \n",
              "1                        Foundation CSS Dropdown Menu      ishankhandelwals   \n",
              "2        Top 20 Excel Shortcuts That You Need To Know           priyankab14   \n",
              "3                           Servlet – Fetching Result       nishatiwari1719   \n",
              "4                                    Suffix Sum Array              rohit768   \n",
              "5                           Kelvin To Celsius Formula           ramneek2307   \n",
              "6                  How to Install MongoDB for VSCode?           ramneek2307   \n",
              "7   7 Highest Paying Programming Languages For Fre...          vanshika4042   \n",
              "8   Free Resume Builder By GeeksforGeeks – Create ...         GeeksforGeeks   \n",
              "9       8 Best Tips to Improve Your JavaScript Skills       prateekjangid10   \n",
              "10         Binary Tree Iterator for Inorder Traversal            gursimar04   \n",
              "11  Capitalize 1st character of all words having a...          durgeshsahu7   \n",
              "12  Longest Increasing consecutive subsequence | S...               pka5667   \n",
              "13  Minimize product of maximum numbers in two Arr...  pranjuldwivedi120568   \n",
              "14         Do’s and Don’ts of Self-Taught Programming           ishasharma9   \n",
              "15  Calculate sum in Diagonal Matrix Decomposition...           prophet1999   \n",
              "16          Count of palindromic rows in given Matrix      manishguptagkp06   \n",
              "17  Find if sum of elements of given Array is less...         mayank007rawa   \n",
              "18                     How to Install MySQL on Linux?               ayonssp   \n",
              "19  Difference between odd level and even level le...        vineetsharma36   \n",
              "\n",
              "    last_updated                                               link category  \\\n",
              "0   21 Feb, 2022  https://www.geeksforgeeks.org/5-best-practices...     easy   \n",
              "1   20 Feb, 2022  https://www.geeksforgeeks.org/foundation-css-d...     easy   \n",
              "2   17 Feb, 2022  https://www.geeksforgeeks.org/top-20-excel-sho...     easy   \n",
              "3   17 Feb, 2022  https://www.geeksforgeeks.org/servlet-fetching...     easy   \n",
              "4   21 Feb, 2022    https://www.geeksforgeeks.org/suffix-sum-array/     easy   \n",
              "5   16 Feb, 2022  https://www.geeksforgeeks.org/kelvin-to-celsiu...     easy   \n",
              "6   12 Feb, 2022  https://www.geeksforgeeks.org/how-to-install-m...     easy   \n",
              "7   18 Feb, 2022  https://www.geeksforgeeks.org/7-highest-paying...     easy   \n",
              "8   08 Feb, 2022  https://www.geeksforgeeks.org/free-resume-buil...     easy   \n",
              "9   06 Feb, 2022  https://www.geeksforgeeks.org/8-best-tips-to-i...     easy   \n",
              "10  16 Feb, 2022  https://www.geeksforgeeks.org/binary-tree-iter...     easy   \n",
              "11  16 Feb, 2022  https://www.geeksforgeeks.org/capitalize-1st-c...     easy   \n",
              "12  22 Feb, 2022  https://www.geeksforgeeks.org/longest-increasi...     easy   \n",
              "13  09 Feb, 2022  https://www.geeksforgeeks.org/minimize-product...     easy   \n",
              "14  01 Feb, 2022  https://www.geeksforgeeks.org/dos-and-donts-of...     easy   \n",
              "15  11 Feb, 2022  https://www.geeksforgeeks.org/calculate-sum-in...     easy   \n",
              "16  07 Feb, 2022  https://www.geeksforgeeks.org/count-of-palindr...     easy   \n",
              "17  09 Feb, 2022  https://www.geeksforgeeks.org/find-if-sum-of-e...     easy   \n",
              "18  31 Jan, 2022  https://www.geeksforgeeks.org/how-to-install-m...     easy   \n",
              "19  03 Feb, 2022  https://www.geeksforgeeks.org/difference-betwe...     easy   \n",
              "\n",
              "    date month  year        day  \n",
              "0     21   Feb  2022     Monday  \n",
              "1     20   Feb  2022     Sunday  \n",
              "2     17   Feb  2022   Thursday  \n",
              "3     17   Feb  2022   Thursday  \n",
              "4     21   Feb  2022     Monday  \n",
              "5     16   Feb  2022  Wednesday  \n",
              "6     12   Feb  2022   Saturday  \n",
              "7     18   Feb  2022     Friday  \n",
              "8      8   Feb  2022    Tuesday  \n",
              "9      6   Feb  2022     Sunday  \n",
              "10    16   Feb  2022  Wednesday  \n",
              "11    16   Feb  2022  Wednesday  \n",
              "12    22   Feb  2022    Tuesday  \n",
              "13     9   Feb  2022  Wednesday  \n",
              "14     1   Feb  2022    Tuesday  \n",
              "15    11   Feb  2022     Friday  \n",
              "16     7   Feb  2022     Monday  \n",
              "17     9   Feb  2022  Wednesday  \n",
              "18    31   Jan  2022     Monday  \n",
              "19     3   Feb  2022   Thursday  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98328f4f-f882-45ef-89d2-e03dfb6ff63f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>author_id</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>link</th>\n",
              "      <th>category</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>day</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5 Best Practices For Writing SQL Joins</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/5-best-practices...</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Foundation CSS Dropdown Menu</td>\n",
              "      <td>ishankhandelwals</td>\n",
              "      <td>20 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/foundation-css-d...</td>\n",
              "      <td>easy</td>\n",
              "      <td>20</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Sunday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Top 20 Excel Shortcuts That You Need To Know</td>\n",
              "      <td>priyankab14</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/top-20-excel-sho...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Servlet – Fetching Result</td>\n",
              "      <td>nishatiwari1719</td>\n",
              "      <td>17 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/servlet-fetching...</td>\n",
              "      <td>easy</td>\n",
              "      <td>17</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Suffix Sum Array</td>\n",
              "      <td>rohit768</td>\n",
              "      <td>21 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/suffix-sum-array/</td>\n",
              "      <td>easy</td>\n",
              "      <td>21</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Kelvin To Celsius Formula</td>\n",
              "      <td>ramneek2307</td>\n",
              "      <td>16 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/kelvin-to-celsiu...</td>\n",
              "      <td>easy</td>\n",
              "      <td>16</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Wednesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>How to Install MongoDB for VSCode?</td>\n",
              "      <td>ramneek2307</td>\n",
              "      <td>12 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/how-to-install-m...</td>\n",
              "      <td>easy</td>\n",
              "      <td>12</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Saturday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7 Highest Paying Programming Languages For Fre...</td>\n",
              "      <td>vanshika4042</td>\n",
              "      <td>18 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/7-highest-paying...</td>\n",
              "      <td>easy</td>\n",
              "      <td>18</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Friday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Free Resume Builder By GeeksforGeeks – Create ...</td>\n",
              "      <td>GeeksforGeeks</td>\n",
              "      <td>08 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/free-resume-buil...</td>\n",
              "      <td>easy</td>\n",
              "      <td>8</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Tuesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8 Best Tips to Improve Your JavaScript Skills</td>\n",
              "      <td>prateekjangid10</td>\n",
              "      <td>06 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/8-best-tips-to-i...</td>\n",
              "      <td>easy</td>\n",
              "      <td>6</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Sunday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Binary Tree Iterator for Inorder Traversal</td>\n",
              "      <td>gursimar04</td>\n",
              "      <td>16 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/binary-tree-iter...</td>\n",
              "      <td>easy</td>\n",
              "      <td>16</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Wednesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Capitalize 1st character of all words having a...</td>\n",
              "      <td>durgeshsahu7</td>\n",
              "      <td>16 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/capitalize-1st-c...</td>\n",
              "      <td>easy</td>\n",
              "      <td>16</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Wednesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Longest Increasing consecutive subsequence | S...</td>\n",
              "      <td>pka5667</td>\n",
              "      <td>22 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/longest-increasi...</td>\n",
              "      <td>easy</td>\n",
              "      <td>22</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Tuesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Minimize product of maximum numbers in two Arr...</td>\n",
              "      <td>pranjuldwivedi120568</td>\n",
              "      <td>09 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/minimize-product...</td>\n",
              "      <td>easy</td>\n",
              "      <td>9</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Wednesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Do’s and Don’ts of Self-Taught Programming</td>\n",
              "      <td>ishasharma9</td>\n",
              "      <td>01 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/dos-and-donts-of...</td>\n",
              "      <td>easy</td>\n",
              "      <td>1</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Tuesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Calculate sum in Diagonal Matrix Decomposition...</td>\n",
              "      <td>prophet1999</td>\n",
              "      <td>11 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/calculate-sum-in...</td>\n",
              "      <td>easy</td>\n",
              "      <td>11</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Friday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Count of palindromic rows in given Matrix</td>\n",
              "      <td>manishguptagkp06</td>\n",
              "      <td>07 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/count-of-palindr...</td>\n",
              "      <td>easy</td>\n",
              "      <td>7</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Find if sum of elements of given Array is less...</td>\n",
              "      <td>mayank007rawa</td>\n",
              "      <td>09 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/find-if-sum-of-e...</td>\n",
              "      <td>easy</td>\n",
              "      <td>9</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Wednesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>How to Install MySQL on Linux?</td>\n",
              "      <td>ayonssp</td>\n",
              "      <td>31 Jan, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/how-to-install-m...</td>\n",
              "      <td>easy</td>\n",
              "      <td>31</td>\n",
              "      <td>Jan</td>\n",
              "      <td>2022</td>\n",
              "      <td>Monday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Difference between odd level and even level le...</td>\n",
              "      <td>vineetsharma36</td>\n",
              "      <td>03 Feb, 2022</td>\n",
              "      <td>https://www.geeksforgeeks.org/difference-betwe...</td>\n",
              "      <td>easy</td>\n",
              "      <td>3</td>\n",
              "      <td>Feb</td>\n",
              "      <td>2022</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98328f4f-f882-45ef-89d2-e03dfb6ff63f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-98328f4f-f882-45ef-89d2-e03dfb6ff63f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-98328f4f-f882-45ef-89d2-e03dfb6ff63f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9d5db210-4d81-4e37-8038-ac9effa642be\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d5db210-4d81-4e37-8038-ac9effa642be')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9d5db210-4d81-4e37-8038-ac9effa642be button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "topics = ['c','c++','java','python','javascript']\n",
        "\n",
        "lst = []\n",
        "\n",
        "for topic in topics:\n",
        "  freq = 0\n",
        "  for i in df['title']:\n",
        "    if topic in i.lower().split(' '):\n",
        "      freq += 1\n",
        "\n",
        "  lst.append([topic , freq])"
      ],
      "metadata": {
        "id": "d0X_bIRHpAJT"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lst"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jOaRh9mdr5xR",
        "outputId": "b1a75e3e-4cbf-42c8-9b48-d6200002b319"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[['c', 820],\n",
              " ['c++', 1178],\n",
              " ['java', 1820],\n",
              " ['python', 2676],\n",
              " ['javascript', 499]]"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: matplotlyb code to display the abr graph from a list of 2d\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "x_axis = [i[0] for i in lst]\n",
        "y_axis = [i[1] for i in lst]\n",
        "\n",
        "plt.figure(figsize=(5, 4))\n",
        "plt.bar(x_axis, y_axis)\n",
        "plt.title(\"Article Distribution based on Languages\")\n",
        "plt.xlabel(\"Languages\")\n",
        "plt.ylabel(\"Number of Articles\")\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "jp0_GpQyrpKw",
        "outputId": "0e25860d-13c8-4a9f-8df7-835a042622ea"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}